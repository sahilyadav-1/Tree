/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    void levelOrderTraversal(TreeNode* root, vector<vector<int>>& ans){
        queue<TreeNode*> q;
        vector<int> lvl;
        
        q.push(root);
        q.push(NULL);

        while(!q.empty()){
            TreeNode* front = q.front();
            q.pop();

            if(front == NULL){
                ans.push_back(lvl);
                lvl.clear();

                if(!q.empty()){
                    q.push(NULL);
                }
            }
            else{
                lvl.push_back(front->val);

                if(front->left != NULL){
                    q.push(front->left);
                }

                if(front->right != NULL){
                    q.push(front->right);
                }
            }
        }
    }

    vector<vector<int>> levelOrder(TreeNode* root) {
        if(root == NULL) return {};
        vector<vector<int>> ans;
        levelOrderTraversal(root,ans);
        return ans;
    }
};
